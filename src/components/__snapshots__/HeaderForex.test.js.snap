// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HeaderForex Component Snapshot should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HeaderForex
    base={10}
    baseCurrency="USD"
    changeBaseCurrencyValue={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="sub-header"
      >
        <h2>
          USD
        </h2>
        <div>
          <input
            className="form-control"
            onChange={[MockFunction]}
            value={10}
          />
        </div>
      </div>,
      "className": "header",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h2>
            USD
          </h2>,
          <div>
            <input
              className="form-control"
              onChange={[MockFunction]}
              value={10}
            />
          </div>,
        ],
        "className": "sub-header",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "USD",
          },
          "ref": null,
          "rendered": "USD",
          "type": "h2",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <input
              className="form-control"
              onChange={[MockFunction]}
              value={10}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-control",
              "onChange": [MockFunction],
              "value": 10,
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="sub-header"
        >
          <h2>
            USD
          </h2>
          <div>
            <input
              className="form-control"
              onChange={[MockFunction]}
              value={10}
            />
          </div>
        </div>,
        "className": "header",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h2>
              USD
            </h2>,
            <div>
              <input
                className="form-control"
                onChange={[MockFunction]}
                value={10}
              />
            </div>,
          ],
          "className": "sub-header",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "USD",
            },
            "ref": null,
            "rendered": "USD",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="form-control"
                onChange={[MockFunction]}
                value={10}
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control",
                "onChange": [MockFunction],
                "value": 10,
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
